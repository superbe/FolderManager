ПОИСКОВАЯ МАШИНА
————————————————————————————————————————————————————————————————————————————————
Состав решения
В данное решение включены следующие взаимосвязанные проекты:
1.	StemmersNet — стиммер, библиотека классов преобразующая слово в его словоформу
	по упрощенному алгоритму (http://snowball.tartarus.org).
2.	WebFolderManager.Core — библиотека классов ядра бизнес-логики (собственно 
	реализация самой поисковой машины).
3.	WebFolderManager.Core.Tests — модульные тесты ядра бизнес-логики поисковой 
	машины.
4.	WebFolderManager.Interface — общие интерфей, которым должны соответствовать 
	все разрабатываемые плагины для поисковой машины.
5.	WebFolderManager.Web — UI поисковой машины.
6.	XMLSearchFormat — пример выделенного плагина (читает XML файлы).

Исплоьзованные технологии и фреймворки
В данном решении были использована библиотека StemmersNet (лицензия http://snowball.tartarus.org/license.php).

Требования к системе
Приожение устанавливается на любой веб-сервер, который поддерживает ASP.NET 
версии не ниже 4.0. Основным веб-сервером следует считать IIS.

Установка приложения
Приложение устанавливается стандартным образом.

Алгоритм работы поисковой машины
Пользователь вводит строку поиска в поле "Строка запроса", в поле "Папка поиска" 
вводит путь к той папке в которой необходимо найти нужные файлы (по умолчанию 
папка с документами доступна в корне приложения по следующему пути: "~/Content/Root/").
Далее заполняет другие фильтры и нажимает кнопку "Искать". Запрос передается на сервер, 
где запускается поисковая машина. При запуске поисковой машины, загружаются все 
установленные плагины находящиеся в папке "~/PlugIn" (плагин устанавливается простым 
копированием в эту папку). В указанной папке происходит первичный отбор файлов 
по установленным расширениям, после чего каждый отобранный файл загружается, 
из него вычленяется текст, который затем парсится в "словник" документа 
(список всех слов документа) и из которого формируется поисковый образ документа.
Аналогичное преобразование производится над поисковым запросом (подстрока поиска)
в поисковый образ запроса. После чего вычисляется пересечение поискового образа 
документа и поискового образа запроса. Если полученное пересение не является 
пустым множеством, то сведения о текущем документе возвращаются "клиенту", где 
они добавляются в общий список результатов поиска. По завершении поиска 
пользователь уведомляется об этом. В процессе выполнения поиск можно остановить 
нажав кнопку "Стоп", после чего процесс поиска останавливается. При повторном 
нажатии на кнопку "Искать" найденные результаты обнуляются и процесс поиска 
запускается по новой.

Разработка плагинов поисковой машины
Для каждого отдельного плагина необходимо создавать свой отдельный проект, например,
плагин работы с XML документом (XMLSearchFormat). Создаваемый класс плагина 
необходимо должен наследоваться от интерфейса IFormat (проект WebFolderManager.Interface).
При этом метод LoadText(string fileName) должен реализовать загрузку документа 
и выделения текстовой составляющей документа, а метод Extension должен возвращать 
стандартное расширение файла, и, Mask — маску поиска для данного типа файла.